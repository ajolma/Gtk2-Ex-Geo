=pod

=head1 NAME

Gtk2::Ex::Geo::Dialogs - A manager of dialogs embedded in a package file as XML

This module is a part of the Gtk2::Ex::Geo toolkit.

=head1 DESCRIPTION

A subclass of Gtk2::Ex::Geo::DialogMaster.

=head1 METHODS

=cut

package Gtk2::Ex::Geo::Dialogs;

use strict;
use warnings;
use locale;
use Glib qw/TRUE FALSE/;

use vars qw/$folder/;

use base qw(Exporter Gtk2::Ex::Geo::DialogMaster);

our %EXPORT_TAGS = ( all => [ qw(&set_combo_to) ] );

our @EXPORT_OK = ( @{ $EXPORT_TAGS{all} } );

our @EXPORT = qw( );

=pod

=head2 new()

Grabs the glade XML from the file of this class and creates a new
DialogMaster object with it.

=cut

#** @method new(%params) 
#*
sub new {
    my($class, %params) = @_;
    unless ($params{glade_interface}) {
        my @glade_interface = <DATA>;
        $params{glade_interface} = \@glade_interface;
    }
    return $class->SUPER::new(%params);
}

sub set_combo_to {
    my($combo, $value) = @{pop()};
    my($model, $path, $iter) = @_;
    my($x) = $model->get($iter);
    if ($x eq $value) {
	$combo->set_active_iter($iter);
	return 1;
    }
}

sub file_chooser {
    my($title, $action, $entry) = @_;
    my $file_chooser =
	Gtk2::FileChooserDialog->new ($title, undef, $action,
				      'gtk-cancel' => 'cancel',
				      'gtk-ok' => 'ok');
    $file_chooser->set_current_folder($folder) if $folder;
    my $filename;
    if ($file_chooser->run eq 'ok') {
	$folder = $file_chooser->get_current_folder();
	$filename = $file_chooser->get_filename;
	#$filename =~ s/^file:\/\///;
	#$filename =~ s/^\/// if $filename =~ /^\/\w:/; # hack for windows
	$entry->set_text($filename) if $entry;
    }
    $file_chooser->destroy;
    #$filename = filename_unescape($filename);
    #print STDERR "$filename\n";
    return $filename;
}

1;
__DATA__
